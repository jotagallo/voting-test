<?php // voting module file

use Drupal\voting\Controller\VotesController;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_theme().
 */
function voting_theme(){
  return [
    'node__voting' => [
      'template' => 'node--voting',
      'base hook' => 'node'
    ],
    'paragraph__voting_option' => [
      'template' => 'paragraph--voting-option',
      'base hook' => 'paragraph'
    ],
  ];
}

/**
 * Implements hook_preprocess_node().
 * Not a good approach but doable for the sake of simplicity.
 */
function voting_preprocess_node(&$vars) {
  $node = $vars['node'];
  if ($node->getType() == 'voting') {
    $votes = new VotesController(\Drupal::database(), \Drupal::messenger());
    $vars['user_voted'] = $votes->checkIfVoted($node->id());
  }
}

/**
 * Implements hook_preprocess_node().
 * Quick and radical approach to solve the problem only for this test.
 */
function voting_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() == 'voting') {
    $build['#cache']['max-age'] = 0;
    \Drupal::service('page_cache_kill_switch')->trigger();
  }
}